# Recurso de Deployment para administrar las réplicas de Pods
apiVersion: apps/v1  # Versión de la API de Kubernetes que se está utilizando
kind: Deployment  # Tipo de recurso, en este caso, un Deployment
metadata:  # Metadatos del Deployment
  name: nginx-v1  # Nombre del Deployment
  labels:  # Etiquetas asociadas al Deployment
    app: nginx-v1  # Etiqueta de la aplicación
spec:  # Especificaciones del Deployment
  replicas: 8  # Número de réplicas deseadas
  selector:  # Selector para identificar los Pods controlados por este Deployment
    matchLabels:  # Coincide con las etiquetas
      app: nginx-v1  # Etiqueta de la aplicación
  template:  # Plantilla para los Pods creados por el Deployment
    metadata:  # Metadatos de la plantilla
      labels:  # Etiquetas de los Pods
        app: nginx-v1  # Etiqueta de la aplicación
    spec:  # Especificaciones de los Pods
      containers:  # Contenedor dentro de los Pods
      - name: nginx-v1  # Nombre del contenedor
        image: nginx:1.25.3  # Imagen del contenedor
        ports:  # Puertos expuestos por el contenedor
        - containerPort: 80  # Puerto 80 expuesto
        resources:  # Recursos asignados al contenedor
          limits:  # Límites de recursos
            memory: "128Mi"  # Límite de memoria
            cpu: "0.25"  # Límite de CPU
          requests:  # Solicitudes de recursos
            memory: "64Mi"  # Solicitud de memoria
            cpu: "0.1"  # Solicitud de CPU
---  # Separador entre recursos de Kubernetes
# Recurso de Service para exponer los Pods del Deployment
apiVersion: v1  # Versión de la API de Kubernetes
kind: Service  # Tipo de recurso, en este caso, un Service
metadata:  # Metadatos del Service
  name: nginx-v1  # Nombre del Service
spec:  # Especificaciones del Service
  selector:  # Selector para dirigir el tráfico al conjunto correcto de Pods
    app: nginx-v1  # Etiqueta de la aplicación
  ports:  # Puertos expuestos por el Service
    - protocol: TCP  # Protocolo TCP
      port: 80  # Puerto 80 del Service
      targetPort: 80  # Puerto de destino en los Pods
  type: LoadBalancer  # Tipo de Service (en este caso, LoadBalancer)
---  # Separador entre recursos de Kubernetes
# Recurso de Secret para almacenar información confidencial
apiVersion: v1  # Versión de la API de Kubernetes
kind: Secret  # Tipo de recurso, en este caso, un Secret
metadata:  # Metadatos del Secret
  name: nginx-v1  # Nombre del Secret
  namespace: webservers  # Espacio de nombres en el que se encuentra el Secret
  annotations:  # Anotaciones del Secret
    kubectl.kubernetes.io/last-applied-configuration: |  # Anotación con configuración en formato JSON
      {"apiVersion":"v1","kind":"Secret","metadata":{"name":"nginx-v1","namespace":"webservers"},"data":{"tls.crt":"BASE64_ENCODED_TLS_CERTIFICATE","tls.key":"BASE64_ENCODED_TLS_PRIVATE_KEY"}}
data:  # Datos del Secret
  tls.crt: BASE64_ENCODED_TLS_CERTIFICATE  # Datos de certificado TLS en Base64
  tls.key: BASE64_ENCODED_TLS_PRIVATE_KEY  # Datos de clave privada TLS en Base64
---  # Separador entre recursos de Kubernetes
# Recurso de HorizontalPodAutoscaler para escalar automáticamente los Pods
apiVersion: autoscaling/v2  # Versión de la API de autoscaling de Kubernetes
kind: HorizontalPodAutoscaler  # Tipo de recurso, en este caso, un HorizontalPodAutoscaler
metadata:  # Metadatos del HorizontalPodAutoscaler
  name: nginx-v1  # Nombre del HorizontalPodAutoscaler
spec:  # Especificaciones del HorizontalPodAutoscaler
  scaleTargetRef:  # Referencia al recurso que se escalará
    apiVersion: apps/v1  # Versión de la API del recurso de destino
    kind: Deployment  # Tipo del recurso de destino
    name: nginx-v1  # Nombre del recurso de destino
  minReplicas: 8  # Número mínimo de réplicas
  maxReplicas: 16  # Número máximo de réplicas
  metrics:  # Métricas utilizadas para escalar
  - type: Resource  # Tipo de métrica (recursos de Pods)
    resource:  # Recurso a tener en cuenta (CPU o memoria)
      name: cpu  # Métrica de CPU
      target:  # Objetivo de la métrica
        type: Utilization  # Tipo de objetivo (Utilization)
        averageUtilization: 50  # Utilización promedio deseada
  - type: Resource  # Tipo de métrica (recursos de Pods)
    resource:  # Recurso a tener en cuenta (CPU o memoria)
      name: memory  # Métrica de memoria
      target:  # Objetivo de la métrica
        type: Utilization  # Tipo de objetivo (Utilization)
        averageUtilization: 70  # Utilización promedio deseada